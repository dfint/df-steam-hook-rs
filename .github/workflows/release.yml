name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version"
        required: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2022-11-06

      - uses: Swatinem/rust-cache@v2

      - name: Install linux build deps
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt install libxi-dev
          sudo apt install libxtst-dev

      - name: Build (windows)
        if: matrix.os == 'windows-latest'
        run: $env:HOOK_VERSION=${{ github.sha }} && cargo +nightly-2022-11-06 build --release

      - name: Build (linux)
        if: matrix.os == 'ubuntu-latest'
        run: HOOK_VERSION=${{ github.sha }} cargo +nightly-2022-11-06 build --release

      - name: Upload artifact (win)
        uses: actions/upload-artifact@v3
        if: matrix.os == 'windows-latest'
        with:
          name: artifact
          path: ./target/release/dfint_hook.dll

      - name: Upload artifact (linux)
        uses: actions/upload-artifact@v3
        if: matrix.os == 'ubuntu-latest'
        with:
          name: artifact
          path: ./target/release/libdfint_hook.so

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Restore files
        uses: actions/download-artifact@v3
        id: download
        with:
          name: artifact
          path: ./

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            hook_${{ github.event.inputs.version }}.dll
            hook_${{ github.event.inputs.version }}.so
          tag_name: ${{ github.event.inputs.version }}
          draft: true
