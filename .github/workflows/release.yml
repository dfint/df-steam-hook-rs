name: Release

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  VERSION: 0.0.1

permissions:
  id-token: write
  contents: read
  attestations: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v5

      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - uses: Swatinem/rust-cache@v2

      - name: Install linux build deps
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt install libxi-dev
          sudo apt install libxtst-dev

      - name: Build
        shell: bash
        run: HOOK_VERSION=${{ github.sha }} cargo build --release

      - name: Upload artifact (windows)
        uses: actions/upload-artifact@v4
        if: startsWith(matrix.os, 'windows')
        with:
          name: artifact-windows
          path: ./target/release/dfint_hook.dll

      - name: Upload artifact (linux)
        uses: actions/upload-artifact@v4
        if: startsWith(matrix.os, 'ubuntu')
        with:
          name: artifact-linux
          path: ./target/release/libdfint_hook.so

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Restore files
        uses: actions/download-artifact@v5
        id: download
        with:
          pattern: artifact-*
          merge-multiple: true
          path: release

      - name: Fetch version from Cargo.toml
        run: |
          pipx install toml-cli
          echo VERSION=$(toml get --toml-path Cargo.toml package.version) >> $GITHUB_ENV

      - name: Rename files
        run: |
          mv release/dfint_hook.dll release/hook_${{ env.VERSION }}.dll
          mv release/libdfint_hook.so release/hook_${{ env.VERSION }}.so

      - name: Attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-path: 'release/*'

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          draft: true
          generate_release_notes: true
          files: |
            release/hook_${{ env.VERSION }}.dll
            release/hook_${{ env.VERSION }}.so

      - name: VirusTotal Scan
        uses: crazy-max/ghaction-virustotal@v4
        with:
          vt_api_key: ${{ secrets.VIRUSTOTAL_API_KEY }}
          files: |
            ./release/*
